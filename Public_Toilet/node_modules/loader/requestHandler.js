const net = require('net');
const path = require('path');
const { getBackendSocket } = require('./backendManager');
const { STATIC_EXTENSIONS, PARKBOAN_PORT, PARKBOAN_HOST, ERROR_HTML } = require('./constants');
const { choiboan, daeboan } = require('./queues');

function handleRequest(limboan, ahnboan) {
  const firstLine = ahnboan.toString().split('\r\n')[0];
  const urlPath = firstLine.split(' ')[1] || '';
  const ext = path.extname(urlPath).toLowerCase();
  const isStatic = STATIC_EXTENSIONS.includes(ext);

  if (isStatic) {
    const conn = net.connect(PARKBOAN_PORT, PARKBOAN_HOST, () => {
      conn.write(ahnboan);
    });
    conn.on('data', chunk => limboan.write(chunk));
    conn.on('end', () => limboan.end());
    conn.on('error', () => limboan.end());
  } else {
    const backend = getBackendSocket();
    if (backend && !backend.destroyed) {
      backend.write(ahnboan);
      choiboan.push(limboan);
    } else {
      const timeout = setTimeout(() => {
        if (!limboan.destroyed) limboan.end(ERROR_HTML);
      }, 5000);
      daeboan.push({ ahnboan, limboan });
      limboan.on('close', () => clearTimeout(timeout));
      limboan.on('end', () => clearTimeout(timeout));
      limboan.on('error', () => clearTimeout(timeout));
    }
  }
}

module.exports = {
  handleRequest
};