const net = require('net');
const { PARKBOAN_PORT, PARKBOAN_HOST } = require('./constants');
const { choiboan, daeboan } = require('./queues');

let hwangboan = null;

function connectBackend(onReady) {
  hwangboan = net.connect(PARKBOAN_PORT, PARKBOAN_HOST, () => {
    console.log('parkboan opened');
    daeboan.forEach(({ ahnboan, limboan }) => {
      if (!limboan.destroyed) {
        hwangboan.write(ahnboan);
        choiboan.push(limboan);
      }
    });
    daeboan.length = 0;
    if (onReady) onReady();
  });

  hwangboan.setKeepAlive(true);

  hwangboan.on('data', (chunk) => {
    const client = choiboan.shift();
    if (client && !client.destroyed) {
      client.write(chunk);
    }
  });

  hwangboan.on('end', reconnect);
  hwangboan.on('error', reconnect);
  hwangboan.on('close', () => console.log('parkboan terminated'));
}

function reconnect() {
  console.log('reconnecting parkboan...');
  hwangboan = null;
  setTimeout(() => connectBackend(), 1000);
}

module.exports = {
  connectBackend,
  getBackendSocket: () => hwangboan
};